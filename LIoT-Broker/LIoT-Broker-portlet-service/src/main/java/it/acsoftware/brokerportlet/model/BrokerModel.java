package it.acsoftware.brokerportlet.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.model.BaseModel;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.GroupedModel;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Broker service. Represents a row in the &quot;LiOT_Broker&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link it.acsoftware.brokerportlet.model.impl.BrokerModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link it.acsoftware.brokerportlet.model.impl.BrokerImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Broker
 * @see it.acsoftware.brokerportlet.model.impl.BrokerImpl
 * @see it.acsoftware.brokerportlet.model.impl.BrokerModelImpl
 * @generated
 */
public interface BrokerModel extends BaseModel<Broker>, GroupedModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a broker model instance should use the {@link Broker} interface instead.
     */

    /**
     * Returns the primary key of this broker.
     *
     * @return the primary key of this broker
     */
    public long getPrimaryKey();

    /**
     * Sets the primary key of this broker.
     *
     * @param primaryKey the primary key of this broker
     */
    public void setPrimaryKey(long primaryKey);

    /**
     * Returns the broker ID of this broker.
     *
     * @return the broker ID of this broker
     */
    public long getBrokerId();

    /**
     * Sets the broker ID of this broker.
     *
     * @param brokerId the broker ID of this broker
     */
    public void setBrokerId(long brokerId);

    /**
     * Returns the group ID of this broker.
     *
     * @return the group ID of this broker
     */
    @Override
    public long getGroupId();

    /**
     * Sets the group ID of this broker.
     *
     * @param groupId the group ID of this broker
     */
    @Override
    public void setGroupId(long groupId);

    /**
     * Returns the company ID of this broker.
     *
     * @return the company ID of this broker
     */
    @Override
    public long getCompanyId();

    /**
     * Sets the company ID of this broker.
     *
     * @param companyId the company ID of this broker
     */
    @Override
    public void setCompanyId(long companyId);

    /**
     * Returns the user ID of this broker.
     *
     * @return the user ID of this broker
     */
    @Override
    public long getUserId();

    /**
     * Sets the user ID of this broker.
     *
     * @param userId the user ID of this broker
     */
    @Override
    public void setUserId(long userId);

    /**
     * Returns the user uuid of this broker.
     *
     * @return the user uuid of this broker
     * @throws SystemException if a system exception occurred
     */
    @Override
    public String getUserUuid() throws SystemException;

    /**
     * Sets the user uuid of this broker.
     *
     * @param userUuid the user uuid of this broker
     */
    @Override
    public void setUserUuid(String userUuid);

    /**
     * Returns the user name of this broker.
     *
     * @return the user name of this broker
     */
    @AutoEscape
    @Override
    public String getUserName();

    /**
     * Sets the user name of this broker.
     *
     * @param userName the user name of this broker
     */
    @Override
    public void setUserName(String userName);

    /**
     * Returns the create date of this broker.
     *
     * @return the create date of this broker
     */
    @Override
    public Date getCreateDate();

    /**
     * Sets the create date of this broker.
     *
     * @param createDate the create date of this broker
     */
    @Override
    public void setCreateDate(Date createDate);

    /**
     * Returns the modified date of this broker.
     *
     * @return the modified date of this broker
     */
    @Override
    public Date getModifiedDate();

    /**
     * Sets the modified date of this broker.
     *
     * @param modifiedDate the modified date of this broker
     */
    @Override
    public void setModifiedDate(Date modifiedDate);

    /**
     * Returns the name of this broker.
     *
     * @return the name of this broker
     */
    @AutoEscape
    public String getName();

    /**
     * Sets the name of this broker.
     *
     * @param name the name of this broker
     */
    public void setName(String name);

    /**
     * Returns the protocol of this broker.
     *
     * @return the protocol of this broker
     */
    @AutoEscape
    public String getProtocol();

    /**
     * Sets the protocol of this broker.
     *
     * @param protocol the protocol of this broker
     */
    public void setProtocol(String protocol);

    /**
     * Returns the url of this broker.
     *
     * @return the url of this broker
     */
    @AutoEscape
    public String getUrl();

    /**
     * Sets the url of this broker.
     *
     * @param url the url of this broker
     */
    public void setUrl(String url);

    /**
     * Returns the port of this broker.
     *
     * @return the port of this broker
     */
    @AutoEscape
    public String getPort();

    /**
     * Sets the port of this broker.
     *
     * @param port the port of this broker
     */
    public void setPort(String port);

    /**
     * Returns the description of this broker.
     *
     * @return the description of this broker
     */
    @AutoEscape
    public String getDescription();

    /**
     * Sets the description of this broker.
     *
     * @param description the description of this broker
     */
    public void setDescription(String description);

    /**
     * Returns the type of this broker.
     *
     * @return the type of this broker
     */
    @AutoEscape
    public String getType();

    /**
     * Sets the type of this broker.
     *
     * @param type the type of this broker
     */
    public void setType(String type);

    /**
     * Returns the connection username of this broker.
     *
     * @return the connection username of this broker
     */
    @AutoEscape
    public String getConnectionUsername();

    /**
     * Sets the connection username of this broker.
     *
     * @param connectionUsername the connection username of this broker
     */
    public void setConnectionUsername(String connectionUsername);

    /**
     * Returns the connection password of this broker.
     *
     * @return the connection password of this broker
     */
    @AutoEscape
    public String getConnectionPassword();

    /**
     * Sets the connection password of this broker.
     *
     * @param connectionPassword the connection password of this broker
     */
    public void setConnectionPassword(String connectionPassword);

    /**
     * Returns the topics of this broker.
     *
     * @return the topics of this broker
     */
    @AutoEscape
    public String getTopics();

    /**
     * Sets the topics of this broker.
     *
     * @param topics the topics of this broker
     */
    public void setTopics(String topics);

    /**
     * Returns the custom props of this broker.
     *
     * @return the custom props of this broker
     */
    @AutoEscape
    public String getCustomProps();

    /**
     * Sets the custom props of this broker.
     *
     * @param customProps the custom props of this broker
     */
    public void setCustomProps(String customProps);

    /**
     * Returns the ssl enabled of this broker.
     *
     * @return the ssl enabled of this broker
     */
    public Boolean getSslEnabled();

    /**
     * Sets the ssl enabled of this broker.
     *
     * @param sslEnabled the ssl enabled of this broker
     */
    public void setSslEnabled(Boolean sslEnabled);

    /**
     * Returns the ssl secret of this broker.
     *
     * @return the ssl secret of this broker
     */
    @AutoEscape
    public String getSslSecret();

    /**
     * Sets the ssl secret of this broker.
     *
     * @param sslSecret the ssl secret of this broker
     */
    public void setSslSecret(String sslSecret);

    /**
     * Returns the ssl certificate u uid of this broker.
     *
     * @return the ssl certificate u uid of this broker
     */
    @AutoEscape
    public String getSslCertificateUUid();

    /**
     * Sets the ssl certificate u uid of this broker.
     *
     * @param sslCertificateUUid the ssl certificate u uid of this broker
     */
    public void setSslCertificateUUid(String sslCertificateUUid);

    /**
     * Returns the start at startup of this broker.
     *
     * @return the start at startup of this broker
     */
    public Boolean getStartAtStartup();

    /**
     * Sets the start at startup of this broker.
     *
     * @param startAtStartup the start at startup of this broker
     */
    public void setStartAtStartup(Boolean startAtStartup);

    /**
     * Returns the mqtt client ID of this broker.
     *
     * @return the mqtt client ID of this broker
     */
    @AutoEscape
    public String getMqttClientId();

    /**
     * Sets the mqtt client ID of this broker.
     *
     * @param mqttClientId the mqtt client ID of this broker
     */
    public void setMqttClientId(String mqttClientId);

    /**
     * Returns the mqtt qos of this broker.
     *
     * @return the mqtt qos of this broker
     */
    public int getMqttQos();

    /**
     * Sets the mqtt qos of this broker.
     *
     * @param mqttQos the mqtt qos of this broker
     */
    public void setMqttQos(int mqttQos);

    /**
     * Returns the mqtt clean session of this broker.
     *
     * @return the mqtt clean session of this broker
     */
    public Boolean getMqttCleanSession();

    /**
     * Sets the mqtt clean session of this broker.
     *
     * @param mqttCleanSession the mqtt clean session of this broker
     */
    public void setMqttCleanSession(Boolean mqttCleanSession);

    /**
     * Returns the kafka zookeeper host of this broker.
     *
     * @return the kafka zookeeper host of this broker
     */
    @AutoEscape
    public String getKafkaZookeeperHost();

    /**
     * Sets the kafka zookeeper host of this broker.
     *
     * @param kafkaZookeeperHost the kafka zookeeper host of this broker
     */
    public void setKafkaZookeeperHost(String kafkaZookeeperHost);

    /**
     * Returns the kafka threads per topic of this broker.
     *
     * @return the kafka threads per topic of this broker
     */
    public int getKafkaThreadsPerTopic();

    /**
     * Sets the kafka threads per topic of this broker.
     *
     * @param kafkaThreadsPerTopic the kafka threads per topic of this broker
     */
    public void setKafkaThreadsPerTopic(int kafkaThreadsPerTopic);

    /**
     * Returns the kafka group ID of this broker.
     *
     * @return the kafka group ID of this broker
     */
    @AutoEscape
    public String getKafkaGroupId();

    /**
     * Sets the kafka group ID of this broker.
     *
     * @param kafkaGroupId the kafka group ID of this broker
     */
    public void setKafkaGroupId(String kafkaGroupId);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(it.acsoftware.brokerportlet.model.Broker broker);

    @Override
    public int hashCode();

    @Override
    public CacheModel<it.acsoftware.brokerportlet.model.Broker> toCacheModel();

    @Override
    public it.acsoftware.brokerportlet.model.Broker toEscapedModel();

    @Override
    public it.acsoftware.brokerportlet.model.Broker toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
